{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"else",
				"elements\tlet"
			],
			[
				"mkd",
				"Ocamlbuild_pack.Shell.mkdir_p\tval string -> unit"
			],
			[
				"is",
				"Ocamlbuild_pack.Pathname.is_directory\tval t -> bool"
			],
			[
				"read",
				"Ocamlbuild_pack.Pathname.readdir\tval t -> t array"
			],
			[
				"Ocamlbu",
				"Ocamlbuild_pack\tmodule"
			],
			[
				"from",
				"Lexing.from_channel\tval in_channel -> lexbuf"
			],
			[
				"ope",
				"Pervasives.open_in\tval string -> in_channel"
			],
			[
				"par",
				"parse_block\tlet"
			],
			[
				"loop",
				"loop_proc\tlet"
			],
			[
				"pa",
				"parse_block\tlet"
			],
			[
				"parse",
				"parse_condition\tlet"
			],
			[
				"pars",
				"parse_condition\tlet"
			],
			[
				"Lex",
				"Lexing\tmodule"
			],
			[
				"is_",
				"is_token_in\tlet"
			],
			[
				"lex",
				"Lexing.lexbuf\ttype { refill_buff : lexbuf -> unit; mutable lex_buffer : bytes; mutable lex_buffer_len : int; mutable lex_abs_pos : int; mutable lex_start_pos : int; mutable lex_curr_pos : int; mutable lex_last_pos : int; mutable lex_last_action : int; mutable lex_eof_reached : bool; mutable lex_mem : int array; mutable lex_start_p : position; mutable lex_curr_p : position; }"
			],
			[
				"expe",
				"expect\tlet"
			],
			[
				"Iden",
				"Ident\tmodule"
			],
			[
				"e",
				"Printf.eprintf\tval ('a, out_channel, unit) format -> 'a"
			],
			[
				"expet",
				"exception\tkeyword"
			],
			[
				"tok",
				"tok3\tlet"
			],
			[
				"assert",
				"OUnit2.assert_equal\tval ?ctxt:test_ctxt -> ?cmp:('a -> 'a -> bool) -> ?printer:('a -> string) -> ?pp_diff:(Format.formatter -> 'a * 'a -> unit) -> ?msg:string -> 'a -> 'a -> unit"
			],
			[
				"OUni",
				"OUnit2\tmodule"
			],
			[
				"Strin",
				"String\tmodule"
			],
			[
				"Hash",
				"Hashtbl\tmodule"
			],
			[
				"co",
				"Char.code\tval char -> int"
			],
			[
				"End",
				"Mini.End\tconstr(token) -"
			],
			[
				"sc",
				"scan_iden"
			],
			[
				"ski",
				"skip_blank_chars"
			],
			[
				"lin",
				"line_num"
			],
			[
				"o",
				"OCB"
			],
			[
				"OCamlbui",
				"OCamlbuildPlugin\tmodule"
			],
			[
				"OCamlbuild",
				"OCamlbuildPlugin\tmodule"
			],
			[
				"Ocambuil",
				"OCamlbuildCommon\tmodule"
			],
			[
				"Oun",
				"OUnit2\tmodule"
			]
		]
	},
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pi",
		"selected_items":
		[
			[
				"pi",
				"Package Control: Install Package"
			],
			[
				"pr",
				"Package Control: Remove Package"
			],
			[
				"pl",
				"Package Control: List Packages"
			],
			[
				"p ex",
				"PackageResourceViewer: Extract Package"
			],
			[
				"list p",
				"Package Control: List Packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"package re",
				"Package Control: Remove Package"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 120.0,
		"history":
		[
			"view.encoding()",
			"sublime.message_dialog(view.encoding())",
			"view.encoding()",
			"sublime.message_dialog(view.encoding())",
			"view.encoding()",
			"ocp-indent",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/bikal/projects/plo_ocaml/src/plo.ml",
		"/home/bikal/projects/plo_ocaml/src/pl_o.ebnf",
		"/home/bikal/.config/sublime-text-3/Packages/Merlin/Merlin.sublime-settings",
		"/home/bikal/projects/plo_ocaml/plo_ocaml.sublime-project",
		"/home/bikal/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/bikal/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/bikal/projects/plo_ocaml/myocamlbuild.ml",
		"/home/bikal/projects/plo_ocaml/src/lexer.mll",
		"/home/bikal/projects/cmdliner/src/cmdliner.mli",
		"/home/bikal/projects/plo_ocaml/src/_parser.mli",
		"/home/bikal/projects/plo_ocaml/src/_lexer.mli",
		"/home/bikal/projects/plo_ocaml/_build/src/lexer.ml",
		"/home/bikal/projects/plo_ocaml/_build/src/lexer.mli",
		"/home/bikal/projects/plo_ocaml/src/lexer.mli",
		"/home/bikal/.opam/4.02.3/installed.roots",
		"/home/bikal/projects/cmdliner/build",
		"/home/bikal/projects/cmdliner/test/tests.itarget",
		"/home/bikal/projects/cmdliner/test/tail_ex.ml",
		"/home/bikal/projects/plo_ocaml/Makefile",
		"/home/bikal/projects/cmdliner/pkg/build.ml",
		"/home/bikal/projects/cmdliner/_tags",
		"/home/bikal/projects/cmdliner/.ocp-indent",
		"/home/bikal/projects/cmdliner/.merlin",
		"/home/bikal/projects/plo_ocaml/test/test_lexer.ml",
		"/home/bikal/projects/plo_ocaml/test/test_parser.ml",
		"/home/bikal/projects/plo_ocaml/.ocamlinit",
		"/home/bikal/projects/plo_parser/parser.c",
		"/home/bikal/projects/plo_ocaml/src/parser.ml",
		"/home/bikal/Downloads/ll1/ll1_fixed.ml",
		"/home/bikal/Downloads/ll1/tokenizer.ml",
		"/home/bikal/Downloads/ll1/token.ml",
		"/home/bikal/Downloads/ll1/ll1_common.ml",
		"/home/bikal/Downloads/ll1/ll1.ml",
		"/home/bikal/Downloads/ll1/common.ml",
		"/home/bikal/projects/plo_ocaml/_build/ocamlc.where",
		"/home/bikal/projects/plo_ocaml/_build/oUnit-lexer tests-linux-9rho#00.log",
		"/home/bikal/projects/plo_ocaml/.gitignore",
		"/home/bikal/projects/plo_ocaml/_tags",
		"/home/bikal/projects/ll1parser_add/ll1parser_add_ocaml/src/ll1.ml",
		"/home/bikal/projects/mini-compiler-LL/src/mini.ml",
		"/home/bikal/projects/menhir_toy1/menhir_toy1.sublime-project",
		"/home/bikal/projects/plo_ocaml/src/lexer.ml",
		"/home/bikal/projects/menhir_toy1/src/lexer.mll",
		"/home/bikal/projects/plo_ocaml/src/token.ml",
		"/home/bikal/.config/sublime-text-3/Packages/OCaml Autocompletion/sublime_ocp_index.py",
		"/home/bikal/projects/parser_recursive_descent_c/lexer.c",
		"/home/bikal/.profile",
		"/home/bikal/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/bikal/projects/mini-compiler-LL/.ocp-indent",
		"/home/bikal/projects/mini-compiler-LL/Makefile",
		"/home/bikal/projects/mini-compiler-LL/src/mini.mli",
		"/home/bikal/projects/mini-compiler-LL/_tags",
		"/home/bikal/projects/mini-compiler-LL/src/mini.odocl",
		"/home/bikal/projects/menhir_formula/src/formula.mli",
		"/home/bikal/projects/mini-compiler-LL/examples/hello.mc",
		"/home/bikal/projects/mini-compiler-LL/README.md",
		"/home/bikal/projects/mini-compiler-LL/README",
		"/home/bikal/projects/mini-compiler-LL/mini-compiler-LL.sublime-project",
		"/home/bikal/projects/sedlex_examples/src/tokenizer.ml",
		"/home/bikal/projects/sedlex_examples/src/subtraction.ml",
		"/home/bikal/projects/sedlex/examples/subtraction.ml",
		"/home/bikal/projects/sedlex_examples/Makefile",
		"/home/bikal/projects/sedlex_examples/_tags",
		"/home/bikal/projects/sedlex_examples/tokenizer.ml",
		"/home/bikal/projects/sedlex_examples/sedlex_examples.sublime-project",
		"/home/bikal/projects/menhir_formula/src/parser.mly",
		"/home/bikal/projects/menhir_formula/_tags",
		"/home/bikal/projects/menhir_formula/menhir_formula.sublime-project",
		"/home/bikal/projects/oforumla/oformula.odocl",
		"/home/bikal/projects/oforumla/README",
		"/home/bikal/Downloads/smart_git_license.lic",
		"/home/bikal/projects/oforumla/formula.mli",
		"/home/bikal/projects/oforumla/.gitignore",
		"/home/bikal/projects/oforumla/oformula.sublime-project",
		"/home/bikal/projects/oforumla/myocamlbuild.ml",
		"/home/bikal/projects/oforumla/_tags",
		"/home/bikal/projects/ohello_world/ohello_world.sublime-project",
		"/home/bikal/projects/oforumla/FormulaTest.ml",
		"/home/bikal/projects/oformula_lib/oformula_lib.sublime-project",
		"/home/bikal/projects/ohello_world/Greet.ml",
		"/home/bikal/projects/ohello_world/hello.ml",
		"/home/bikal/projects/ohello_world/ohello_world.sublime-workspace",
		"/home/bikal/projects/ohello_world/.sublime-project",
		"/home/bikal/projects/ohello_world/_tags",
		"/home/bikal/projects/ohello_world/.gitignore",
		"/home/bikal/projects/ohello_world/epoch.ml",
		"/home/bikal/projects/cmdliner/src/cmdliner.ml",
		"/home/bikal/.emacs"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"exception",
			"token",
			"token ",
			"token",
			"strip",
			"session"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"next_token",
			"Lexer.token"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 215.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
