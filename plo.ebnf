(** A Lexer for PL/0 language as defined at 
	
	file pl_o.ebnf for grammar spec.
	
	Note the additon of '!' (Write) and '?' (Read) operator for reading/writing from
	console.

	PL/O is defined at - https://en.wikipedia.org/wiki/PL/0.	
	PL/O 2.0 syntax - http://fruttenboel.verhoeven272.nl/m4m/index.html
*)


program 	= 	block "." .

block 	= 	["CONST" ident "=" number { "," ident "=" number} ";"]
["VAR" ident {"," ident} ";"]
{"PROCEDURE" ident ";" block ";"} statement.

statement 	= 	[ident ":=" expression | "CALL" ident | "?" ident | "!" expression
| "BEGIN" statement {";" statement } "END"
| "IF" condition "THEN" statement
| "WHILE" condition "DO" statement ].

condition 	= 	"ODD" expression | expression ("="|"#"|"<="|"<"|">"|">=") expression .

expression 	= 	["+"|"-"] term {("+"|"-") term}.

term 	= 	factor {("*"|"/") factor}.

factor 	= 	ident | number | "(" expression ")".

ident 	= 	letter {letter | digit}
number 	= 	digit { digit }
letter 	= 	{ "a" | "b" | ... | "y" | "z" | "A" | "B" | ... | "Y" | "Z" }
digit 	= 	{ "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" }